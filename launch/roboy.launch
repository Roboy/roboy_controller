<launch>
    <arg name="model_name" default="roboy_xylophone"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="false"/>
    <arg name="gui" default="false"/>
    <arg name="headless" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="simulate" default="false"/>
    <arg name="xylophone" default="false"/>
    <arg name="cup_table" default="false"/>
    <arg name="gazebo" default="false"/>

    <group if="$(arg gazebo)">
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="debug" value="$(arg debug)"/>
            <arg name="gui" value="$(arg gui)"/>
            <arg name="paused" value="$(arg paused)"/>
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="headless" value="$(arg headless)"/>
            <!--<arg name="world_name" value="roboy_xylophone.world"/>-->
        </include>

        <group if="$(arg xylophone)">
            <node name="sdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
                  args="-sdf -file $(find roboy_models)/xylophone/model.sdf -model xylophone
                              -x 0.1 -y -0.6 -z 0.15
                              -R 0.0 -P 0 -Y -3.07"
            />
        </group>

        <group if="$(arg cup_table)">
            <node name="sdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
                  args="-sdf -file $(find roboy_models)/cup_table/model.sdf -model cup_table
                              -x 0.41 -y -0.5 -z 0.32
                              -R 0 -P 0 -Y 0.5"
            />
        </group>

        <group if="$(arg simulate)">
            <node name="sdf_spawner2" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
                  args="-sdf -file $(find roboy_models)/$(arg model_name)/model.sdf -model $(arg model_name)
              -J sphere_left_axis0 -1.5
              -J sphere_right_axis0 -1.5
        "
            />
        </group>
    </group>

    <node pkg="tf" type="static_transform_publisher" name="static_map" args="0 -0.12 0.045 0 0 -0.7071068 0.7071068  /head /map  100"/>
    <!--<node pkg="tf" type="static_transform_publisher" name="static_map2" args="0 0 0 1 0 0 0  /odom /map  100"/>-->

    <param name="robot_description_sdf" textfile="$(find roboy_models)/$(arg model_name)/model.sdf" />
    <param name="robot_description" textfile="$(find roboy_models)/$(arg model_name)/model.urdf" />
    <param name="urdf_path" value="$(find roboy_models)/$(arg model_name)/model.urdf" />
    <param name="simulate" value="$(arg simulate)" />

    <!-- Load the parameters to the parameter server from the yaml file-->
    <rosparam file="$(find roboy_controller)/config/$(arg model_name).yaml" command="load"/>

    <node name="roboy_controller"
          pkg="roboy_controller"
          type="roboy"
          respawn="false"
          output="screen"
          args="$(arg model_name)"
    />

    <node name="roboy_state_estimator"
          pkg="roboy_state_estimator"
          type="roboy_state_estimator"
          respawn="false"
          output="screen"
    />
</launch>
        <!--launch-prefix="gdb -ex run"-->
        <!--launch-prefix="gdb -ex run"-->
        <!-- FOR DEBUGGING USE THIS launch-prefix="xterm -e gdb -se devel/lib/myo_master/multiJoint" FOR VALGRIND USE THIS launch-prefix="valgrind -log-file=/home/roboy/workspace/ros_hierarchy/valgrind.log -leak-check=full"-->

        <!-- args="-c /home/roboy/workspace/roboy-ros-control/src/roboy_powerlink/powerlink/output/mnobd.cdc"-->